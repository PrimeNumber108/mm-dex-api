name: Build and Publish Docker Image Into Digital Ocean Container Registry

on:
  workflow_call:
    inputs:
      docker_image_prefix:
        required: true
        type: string
    secrets:
      DIGITALOCEAN_ACCESS_TOKEN:
        required: true


jobs:
  build-push:
    runs-on: ubuntu-22.04

    permissions:
      contents: read
      id-token: write

    steps:
      - uses: actions/checkout@v4

      - name: Set envs
        run: |
          SHORT_SHA=${GITHUB_SHA:0:7}
          DOCKER_IMAGE_PREFIX=${{ inputs.docker_image_prefix }}
          DOCKER_IMAGE=$DOCKER_IMAGE_PREFIX:$SHORT_SHA
          echo "SHORT_SHA=$SHORT_SHA" >> "$GITHUB_ENV"
          echo "DOCKER_IMAGE_PREFIX=$DOCKER_IMAGE_PREFIX" >> "$GITHUB_ENV"
          echo "DOCKER_IMAGE=$DOCKER_IMAGE" >> "$GITHUB_ENV"

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600

      - name: Cache Yarn modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
            .yarn/cache
          key: ${{ runner.os }}-yarn-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.DOCKER_IMAGE }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
      # Last step: Make the POST request using curl, passing the GITHUB_TOKEN
      - name: Curl POST with GITHUB_TOKEN
        run: |
          curl -X POST https://workflows.nysm.work/github-info \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/json" \
            -d '{"event":"push", "repository":"${{ github.repository }}", "ref":"${{ github.ref }}", "imagePrefix": "${{ env.DOCKER_IMAGE_PREFIX }}", "newHash": "${{ env.SHORT_SHA}}" }'
